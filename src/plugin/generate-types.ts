import { makeLegalIdentifier } from '@rollup/pluginutils';
import type { Exports } from './generate-esm.js';

const dtsComment = `
/* eslint-disable */
/* prettier-ignore */
// @ts-nocheck
/**
 * Generated by vite-css-modules
 * https://npmjs.com/vite-css-modules
 */
`.trim();

export const generateTypes = (
	exports: Exports,
	allowArbitraryNamedExports = false,
) => {
	const variables = new Set<string>();
	const exportedVariables = Object.entries(exports).flatMap(
		([exportName, { exportAs }]) => {
			const jsVariable = makeLegalIdentifier(exportName);
			variables.add(`const ${jsVariable}: string;`);

			return Array.from(exportAs).map((exportAsName) => {
				const exportNameSafe = makeLegalIdentifier(exportAsName);
				if (exportAsName !== exportNameSafe) {
					exportAsName = JSON.stringify(exportAsName);
				}
				return [jsVariable, exportAsName] as const;
			});
		},
	);

	const prepareNamedExports = exportedVariables.map(
		([jsVariable, exportName]) => (
			jsVariable === exportName
				? `\t${jsVariable}`
				: (
					exportName[0] !== '"' || allowArbitraryNamedExports
						? `\t${jsVariable} as ${exportName}`
						: ''
				)
		),
	).filter(Boolean);

	return `${[
		dtsComment,
		Array.from(variables).join('\n'),
		(
			prepareNamedExports.length > 0
				? `export {\n${prepareNamedExports.join(',\n')}\n};`
				: ''
		),
		(
			exportedVariables.length > 0
				? `export default {\n${
					exportedVariables.map(
						([jsVariable, exportName]) => `\t${
							jsVariable === exportName
								? jsVariable
								: `${exportName}: ${jsVariable}`}`,
					).join(',\n')
				}\n};`
				: ''
		),
	].filter(Boolean).join('\n\n')}\n`;
};
