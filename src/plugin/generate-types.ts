import { makeLegalIdentifier } from '@rollup/pluginutils';
import type { Exports } from './generate-esm.js';
import type { ExportMode } from './types.js';

const dtsTemplate = (code?: string) => `/* eslint-disable */
/* prettier-ignore */
// @ts-nocheck
/**
 * Generated by vite-css-modules
 * https://npmjs.com/vite-css-modules
 */
${code ? `\n${code}\n` : ''}`;

type ExportedVariable = [variableName: string, exportedAs: string];

const genereateNamedExports = (
	exportedVariables: ExportedVariable[],
	exportMode: ExportMode,
	allowArbitraryNamedExports: boolean,
) => {
	const prepareNamedExports = exportedVariables.map(
		([jsVariable, exportName]) => {
			if (exportMode === 'both' && exportName === '"default"') {
				return;
			}

			if (jsVariable === exportName) {
				return `\t${jsVariable}`;
			}

			if (exportName[0] !== '"' || allowArbitraryNamedExports) {
				return `\t${jsVariable} as ${exportName}`;
			}

			return '';
		},
	).filter(Boolean);

	if (prepareNamedExports.length === 0) {
		return '';
	}

	return `export {\n${prepareNamedExports.join(',\n')}\n};`;
};

const generateDefaultExport = (
	exportedVariables: ExportedVariable[],
) => {
	// Generate type-safe default export compatible with rollup-plugin-dts
	const properties = exportedVariables.map(
		([jsVariable, exportName]) => {
			const key = jsVariable === exportName
				? jsVariable
				: exportName;
			return `\t${key}: typeof ${jsVariable};`;
		},
	).join('\n');

	return `declare const _default: {\n${properties}\n};\nexport default _default;`;
};

export const generateTypes = (
	exports: Exports,
	exportMode: ExportMode,
	allowArbitraryNamedExports = false,
) => {
	const variables = new Set<string>();
	const exportedVariables = Object.entries(exports).flatMap(
		([exportName, { exportAs }]) => {
			const jsVariable = makeLegalIdentifier(exportName);
			variables.add(`declare const ${jsVariable}: string;`);

			return Array.from(exportAs).map((exportAsName) => {
				const exportNameSafe = makeLegalIdentifier(exportAsName);
				if (exportAsName !== exportNameSafe) {
					exportAsName = JSON.stringify(exportAsName);
				}
				return [jsVariable, exportAsName] as ExportedVariable;
			});
		},
	);

	if (exportedVariables.length === 0) {
		return dtsTemplate();
	}

	return dtsTemplate([
		Array.from(variables).join('\n'),
		(exportMode === 'both' || exportMode === 'named')
			? genereateNamedExports(exportedVariables, exportMode, allowArbitraryNamedExports)
			: '',
		(exportMode === 'both' || exportMode === 'default')
			? generateDefaultExport(exportedVariables)
			: '',
	].filter(Boolean).join('\n\n'));
};
